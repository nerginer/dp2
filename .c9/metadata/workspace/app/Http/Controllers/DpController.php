{"filter":false,"title":"DpController.php","tooltip":"/app/Http/Controllers/DpController.php","undoManager":{"mark":8,"position":8,"stack":[[{"start":{"row":0,"column":0},"end":{"row":185,"column":0},"action":"remove","lines":["<?php","","namespace App\\Http\\Controllers;","","use Illuminate\\Http\\Request;","","use App\\Http\\Requests;","use App\\Dp;","use App\\tag;","use App\\Category;","","","use Illuminate\\Support\\Facades\\Validator;","","","","","class DpController extends Controller","{","    ","    ","//       public function __construct()","//    {","//        $this->middleware('auth');","//    }","    ","    ","     public function index()","    {","        $dps = Dp::Paginate(4);","        $tags =tag::all();","        $categories = Category::all();","        $tag=0;","        ","        ","       // return $dps;","      //  return view('dps.index')->with('categories', 'dps','tag');","        ","        return view('dps.index',array('dps' => $dps,'tags' => $tags,'tag' => $tag,'categories' =>$categories));","     //compact('categories'),compact('dps'),compact('tag'));","    }","    ","     public function show(DP $dp)","    {","       ","        //$tags = $dp->tags();","        //return $tags;","        return view('dps.show',compact('dp'));","    }","","     public function tag(tag $tag)","    {","       ","       $dps = $tag->dps()->Paginate(4);","       $tags =tag::all();","       $categories = Category::all();","       //return $dps;","       return view('dps.index',array('dps' => $dps,'tags' => $tags,'tag' => $tag,'categories' =>$categories));","       //return view('dps.index',compact('dps'),compact('tag'));","        ","    }","    ","     public function category(category $category)","    {","       ","       $dps = $category->dps()->Paginate(4);","       $tags =tag::all();","       $categories = Category::all();","       //return $dps;","       return view('dps.index',array('dps' => $dps,'tags' => $tags,'category' => $category,'categories' =>$categories));","       ","       //return view('dps.index',compact('dps'),compact('tag'));","        ","    }","    ","    public function search(Request $request)","    {","       \t// Gets the query string from our form submission ","        $search = \\Request::get('search');","       \t","       \t$dps = Dp::where('name', 'LIKE', '%' . $search . '%')->paginate(4);","        $tags =tag::all();","        $categories = Category::all();","        $tag = 0;  ","        ","        return view('dps.index',array('dps' => $dps,'tags' => $tags,'tag' => $tag,'categories' =>$categories));","        ","        ","","     }","     ","     public function sendForm()","    {","       ","        //Get all the data and store it inside Store Variable","        $data = \\Request::all();","        ","        $user  = \\Auth::user();","        ","      //  return $data;","","        //Validation rules","        //{\"_token\":\"dMKekQkq5Wqn4efEiXlNuEaYqpUIkU63HGwMed2c\",\"name\":\"TestName\",\"description\":\"Testdescription\",\"baseComponent\":\"testbase\",\"pdf\":\"testbaselink\",\"val\":\"open\",\"opensourceproject\":\"opensourcelink\",\"tags\":\"teattag1,teattag2\",\"eaglefile\":\"Breadboard_power r3.sch\"}","        $rules = array (","            'name' => 'required',// uncomment if you want to grab this field","        //    'description' => 'required|min:10',","            //'email' => 'required|email',  uncomment if you want to grab this field","         //   'eaglefile' => 'required'","        );","","        //Validate data","        $validator = Validator::make ($data, $rules);","","        //If everything is correct than run passes.","        if ($validator -> passes()){","            ","           ","","           \\Mail::send('emails.newDp',  array('user' => $user,'data' => $data), function($message) use ($data)","            {","                //$message->from($data['email'] , $data['first_name']); uncomment if using first name and email fields ","                $message->from('newDP@makerstorage', 'New Design Pattern Arrived');","                //email 'To' field: cahnge this to emails that you want to be notified.                    ","                $message->to('nerginer@gmail.com', 'Nuri')->cc('nerginer@gnexlab.com')->subject('New Design Pattern');","","            });","                // Redirect to page","                 return view('message')->with('message', 'Your message has been sent. Thank You!');","","","               ","        }else{","                //return contact form with errors","                $errors = $validator->errors()->all();","","                return view('message',compact('errors'));","                ","                ","","        }","     }","    ","    ","        ","   public function incLikes($dp_id)","   {","\t if(Auth::check())","\t {   ","       if(\\DB::table('dp_likes')->where(\"user_id\",Auth::user()->id)->count()==0)","\t   {","\t\t  $ar=[];","\t\t  $ar['user_id']=Auth::user()->id;","\t\t  $ar['dp_id']=$dp_id;","\t\t  \\DB::table('dp_likes')->insert($ar);","\t\t   $response['type']=\"success\";  ","\t   }","\t   else","\t   {","\t\t  $response['type']=\"error\"; ","\t\t   ","\t   }","\t    $response['total_likes'] =DB::table('dp_likes')->where(\"dp_id\",$dp_id)->count();","\t    return $response;","\t }","        ","   }","    ","    ","","    ","    ","    ","    ","    ","    public function licence()","    {","        return view('licence');","    }","    ","     public function message()","    {","        return view('message');","    }","     ","}",""],"id":341}],[{"start":{"row":0,"column":0},"end":{"row":185,"column":0},"action":"insert","lines":["<?php","","namespace App\\Http\\Controllers;","","use Illuminate\\Http\\Request;","","use App\\Http\\Requests;","use App\\Dp;","use App\\tag;","use App\\Category;","","","use Illuminate\\Support\\Facades\\Validator;","","","","","class DpController extends Controller","{","    ","    ","//       public function __construct()","//    {","//        $this->middleware('auth');","//    }","    ","    ","     public function index()","    {","        $dps = Dp::Paginate(4);","        $tags =tag::all();","        $categories = Category::all();","        $tag=0;","        ","        ","       // return $dps;","      //  return view('dps.index')->with('categories', 'dps','tag');","        ","        return view('dps.index',array('dps' => $dps,'tags' => $tags,'tag' => $tag,'categories' =>$categories));","     //compact('categories'),compact('dps'),compact('tag'));","    }","    ","     public function show(DP $dp)","    {","       ","        //$tags = $dp->tags();","        //return $tags;","        return view('dps.show',compact('dp'));","    }","","     public function tag(tag $tag)","    {","       ","       $dps = $tag->dps()->Paginate(4);","       $tags =tag::all();","       $categories = Category::all();","       //return $dps;","       return view('dps.index',array('dps' => $dps,'tags' => $tags,'tag' => $tag,'categories' =>$categories));","       //return view('dps.index',compact('dps'),compact('tag'));","        ","    }","    ","     public function category(category $category)","    {","       ","       $dps = $category->dps()->Paginate(4);","       $tags =tag::all();","       $categories = Category::all();","       //return $dps;","       return view('dps.index',array('dps' => $dps,'tags' => $tags,'category' => $category,'categories' =>$categories));","       ","       //return view('dps.index',compact('dps'),compact('tag'));","        ","    }","    ","    public function search(Request $request)","    {","       \t// Gets the query string from our form submission ","        $search = \\Request::get('search');","       \t","       \t$dps = Dp::where('name', 'LIKE', '%' . $search . '%')->paginate(4);","        $tags =tag::all();","        $categories = Category::all();","        $tag = 0;  ","        ","        return view('dps.index',array('dps' => $dps,'tags' => $tags,'tag' => $tag,'categories' =>$categories));","        ","        ","","     }","     ","     public function sendForm()","    {","       ","        //Get all the data and store it inside Store Variable","        $data = \\Request::all();","        ","        $user  = \\Auth::user();","        ","      //  return $data;","","        //Validation rules","        //{\"_token\":\"dMKekQkq5Wqn4efEiXlNuEaYqpUIkU63HGwMed2c\",\"name\":\"TestName\",\"description\":\"Testdescription\",\"baseComponent\":\"testbase\",\"pdf\":\"testbaselink\",\"val\":\"open\",\"opensourceproject\":\"opensourcelink\",\"tags\":\"teattag1,teattag2\",\"eaglefile\":\"Breadboard_power r3.sch\"}","        $rules = array (","            'name' => 'required',// uncomment if you want to grab this field","        //    'description' => 'required|min:10',","            //'email' => 'required|email',  uncomment if you want to grab this field","         //   'eaglefile' => 'required'","        );","","        //Validate data","        $validator = Validator::make ($data, $rules);","","        //If everything is correct than run passes.","        if ($validator -> passes()){","            ","           ","","           \\Mail::send('emails.newDp',  array('user' => $user,'data' => $data), function($message) use ($data)","            {","                //$message->from($data['email'] , $data['first_name']); uncomment if using first name and email fields ","                $message->from('newDP@makerstorage', 'New Design Pattern Arrived');","                //email 'To' field: cahnge this to emails that you want to be notified.                    ","                $message->to('nerginer@gmail.com', 'Nuri')->cc('nerginer@gnexlab.com')->subject('New Design Pattern');","","            });","                // Redirect to page","                 return view('message')->with('message', 'Your message has been sent. Thank You!');","","","               ","        }else{","                //return contact form with errors","                $errors = $validator->errors()->all();","","                return view('message',compact('errors'));","                ","                ","","        }","     }","    ","    ","        ","   public function incLikes($dp_id)","   {","\t if(\\Auth::check())","\t {   ","       if(\\DB::table('dp_likes')->where(\"user_id\",\\Auth::user()->id)->count()==0)","\t   {","\t\t  $ar=[];","\t\t  $ar['user_id']=\\Auth::user()->id;","\t\t  $ar['dp_id']=$dp_id;","\t\t  \\DB::table('dp_likes')->insert($ar);","\t\t   $response['type']=\"success\";  ","\t   }","\t   else","\t   {","\t\t  $response['type']=\"error\"; ","\t\t   ","\t   }","\t    $response['total_likes'] =\\DB::table('dp_likes')->where(\"dp_id\",$dp_id)->count();","\t    return $response;","\t }","        ","   }","    ","    ","","    ","    ","    ","    ","    ","    public function licence()","    {","        return view('licence');","    }","    ","     public function message()","    {","        return view('message');","    }","     ","}",""],"id":342}],[{"start":{"row":0,"column":0},"end":{"row":185,"column":0},"action":"remove","lines":["<?php","","namespace App\\Http\\Controllers;","","use Illuminate\\Http\\Request;","","use App\\Http\\Requests;","use App\\Dp;","use App\\tag;","use App\\Category;","","","use Illuminate\\Support\\Facades\\Validator;","","","","","class DpController extends Controller","{","    ","    ","//       public function __construct()","//    {","//        $this->middleware('auth');","//    }","    ","    ","     public function index()","    {","        $dps = Dp::Paginate(4);","        $tags =tag::all();","        $categories = Category::all();","        $tag=0;","        ","        ","       // return $dps;","      //  return view('dps.index')->with('categories', 'dps','tag');","        ","        return view('dps.index',array('dps' => $dps,'tags' => $tags,'tag' => $tag,'categories' =>$categories));","     //compact('categories'),compact('dps'),compact('tag'));","    }","    ","     public function show(DP $dp)","    {","       ","        //$tags = $dp->tags();","        //return $tags;","        return view('dps.show',compact('dp'));","    }","","     public function tag(tag $tag)","    {","       ","       $dps = $tag->dps()->Paginate(4);","       $tags =tag::all();","       $categories = Category::all();","       //return $dps;","       return view('dps.index',array('dps' => $dps,'tags' => $tags,'tag' => $tag,'categories' =>$categories));","       //return view('dps.index',compact('dps'),compact('tag'));","        ","    }","    ","     public function category(category $category)","    {","       ","       $dps = $category->dps()->Paginate(4);","       $tags =tag::all();","       $categories = Category::all();","       //return $dps;","       return view('dps.index',array('dps' => $dps,'tags' => $tags,'category' => $category,'categories' =>$categories));","       ","       //return view('dps.index',compact('dps'),compact('tag'));","        ","    }","    ","    public function search(Request $request)","    {","       \t// Gets the query string from our form submission ","        $search = \\Request::get('search');","       \t","       \t$dps = Dp::where('name', 'LIKE', '%' . $search . '%')->paginate(4);","        $tags =tag::all();","        $categories = Category::all();","        $tag = 0;  ","        ","        return view('dps.index',array('dps' => $dps,'tags' => $tags,'tag' => $tag,'categories' =>$categories));","        ","        ","","     }","     ","     public function sendForm()","    {","       ","        //Get all the data and store it inside Store Variable","        $data = \\Request::all();","        ","        $user  = \\Auth::user();","        ","      //  return $data;","","        //Validation rules","        //{\"_token\":\"dMKekQkq5Wqn4efEiXlNuEaYqpUIkU63HGwMed2c\",\"name\":\"TestName\",\"description\":\"Testdescription\",\"baseComponent\":\"testbase\",\"pdf\":\"testbaselink\",\"val\":\"open\",\"opensourceproject\":\"opensourcelink\",\"tags\":\"teattag1,teattag2\",\"eaglefile\":\"Breadboard_power r3.sch\"}","        $rules = array (","            'name' => 'required',// uncomment if you want to grab this field","        //    'description' => 'required|min:10',","            //'email' => 'required|email',  uncomment if you want to grab this field","         //   'eaglefile' => 'required'","        );","","        //Validate data","        $validator = Validator::make ($data, $rules);","","        //If everything is correct than run passes.","        if ($validator -> passes()){","            ","           ","","           \\Mail::send('emails.newDp',  array('user' => $user,'data' => $data), function($message) use ($data)","            {","                //$message->from($data['email'] , $data['first_name']); uncomment if using first name and email fields ","                $message->from('newDP@makerstorage', 'New Design Pattern Arrived');","                //email 'To' field: cahnge this to emails that you want to be notified.                    ","                $message->to('nerginer@gmail.com', 'Nuri')->cc('nerginer@gnexlab.com')->subject('New Design Pattern');","","            });","                // Redirect to page","                 return view('message')->with('message', 'Your message has been sent. Thank You!');","","","               ","        }else{","                //return contact form with errors","                $errors = $validator->errors()->all();","","                return view('message',compact('errors'));","                ","                ","","        }","     }","    ","    ","        ","   public function incLikes($dp_id)","   {","\t if(\\Auth::check())","\t {   ","       if(\\DB::table('dp_likes')->where(\"user_id\",\\Auth::user()->id)->count()==0)","\t   {","\t\t  $ar=[];","\t\t  $ar['user_id']=\\Auth::user()->id;","\t\t  $ar['dp_id']=$dp_id;","\t\t  \\DB::table('dp_likes')->insert($ar);","\t\t   $response['type']=\"success\";  ","\t   }","\t   else","\t   {","\t\t  $response['type']=\"error\"; ","\t\t   ","\t   }","\t    $response['total_likes'] =\\DB::table('dp_likes')->where(\"dp_id\",$dp_id)->count();","\t    return $response;","\t }","        ","   }","    ","    ","","    ","    ","    ","    ","    ","    public function licence()","    {","        return view('licence');","    }","    ","     public function message()","    {","        return view('message');","    }","     ","}",""],"id":343}],[{"start":{"row":0,"column":0},"end":{"row":203,"column":0},"action":"insert","lines":["<?php","","namespace App\\Http\\Controllers;","","use Illuminate\\Http\\Request;","","use App\\Http\\Requests;","use App\\Dp;","use App\\tag;","use App\\Category;","","","use Illuminate\\Support\\Facades\\Validator;","","","","","class DpController extends Controller","{","    ","    ","//       public function __construct()","//    {","//        $this->middleware('auth');","//    }","    ","    ","     public function index()","    {","        $dps = Dp::Paginate(4);","        $tags =tag::all();","        $categories = Category::all();","        $tag=0;","        ","        ","       // return $dps;","      //  return view('dps.index')->with('categories', 'dps','tag');","        ","        return view('dps.index',array('dps' => $dps,'tags' => $tags,'tag' => $tag,'categories' =>$categories));","     //compact('categories'),compact('dps'),compact('tag'));","    }","    ","     public function show(DP $dp)","    {","       ","        //$tags = $dp->tags();","        //return $tags;","\t\t","\t\tif(Auth::check())","\t\t{","\t\t   if(\\DB::table('dp_likes')->where(\"user_id\",\\Auth::user()->id)->where('dp_id',$dp->id)->count()>0)","\t       {\t","\t\t\t$userLiked=1;","\t\t   }","\t\t   else","\t\t   {","\t\t\t  $userLiked=0; ","\t\t   }","\t\t}","\t\telse","\t\t{","\t\t  $userLiked=0;\t","\t\t\t","\t\t}","\t","        return view('dps.show',compact('dp'))->with(\"isUserLiked\",$userLiked);","    }","","     public function tag(tag $tag)","    {","       ","       $dps = $tag->dps()->Paginate(4);","       $tags =tag::all();","       $categories = Category::all();","       //return $dps;","       return view('dps.index',array('dps' => $dps,'tags' => $tags,'tag' => $tag,'categories' =>$categories));","       //return view('dps.index',compact('dps'),compact('tag'));","        ","    }","    ","     public function category(category $category)","    {","       ","       $dps = $category->dps()->Paginate(4);","       $tags =tag::all();","       $categories = Category::all();","       //return $dps;","       return view('dps.index',array('dps' => $dps,'tags' => $tags,'category' => $category,'categories' =>$categories));","       ","       //return view('dps.index',compact('dps'),compact('tag'));","        ","    }","    ","    public function search(Request $request)","    {","       \t// Gets the query string from our form submission ","        $search = \\Request::get('search');","       \t","       \t$dps = Dp::where('name', 'LIKE', '%' . $search . '%')->paginate(4);","        $tags =tag::all();","        $categories = Category::all();","        $tag = 0;  ","        ","        return view('dps.index',array('dps' => $dps,'tags' => $tags,'tag' => $tag,'categories' =>$categories));","        ","        ","","     }","     ","     public function sendForm()","    {","       ","        //Get all the data and store it inside Store Variable","        $data = \\Request::all();","        ","        $user  = \\Auth::user();","        ","      //  return $data;","","        //Validation rules","        //{\"_token\":\"dMKekQkq5Wqn4efEiXlNuEaYqpUIkU63HGwMed2c\",\"name\":\"TestName\",\"description\":\"Testdescription\",\"baseComponent\":\"testbase\",\"pdf\":\"testbaselink\",\"val\":\"open\",\"opensourceproject\":\"opensourcelink\",\"tags\":\"teattag1,teattag2\",\"eaglefile\":\"Breadboard_power r3.sch\"}","        $rules = array (","            'name' => 'required',// uncomment if you want to grab this field","        //    'description' => 'required|min:10',","            //'email' => 'required|email',  uncomment if you want to grab this field","         //   'eaglefile' => 'required'","        );","","        //Validate data","        $validator = Validator::make ($data, $rules);","","        //If everything is correct than run passes.","        if ($validator -> passes()){","            ","           ","","           \\Mail::send('emails.newDp',  array('user' => $user,'data' => $data), function($message) use ($data)","            {","                //$message->from($data['email'] , $data['first_name']); uncomment if using first name and email fields ","                $message->from('newDP@makerstorage', 'New Design Pattern Arrived');","                //email 'To' field: cahnge this to emails that you want to be notified.                    ","                $message->to('nerginer@gmail.com', 'Nuri')->cc('nerginer@gnexlab.com')->subject('New Design Pattern');","","            });","                // Redirect to page","                 return view('message')->with('message', 'Your message has been sent. Thank You!');","","","               ","        }else{","                //return contact form with errors","                $errors = $validator->errors()->all();","","                return view('message',compact('errors'));","                ","                ","","        }","     }","    ","    ","        ","   public function incLikes($dp_id)","   {","\t if(\\Auth::check())","\t {   ","       if(\\DB::table('dp_likes')->where(\"user_id\",\\Auth::user()->id)->where('dp_id',$dp_id)->count()==0)","\t   {","\t\t  $ar=[];","\t\t  $ar['user_id']=\\Auth::user()->id;","\t\t  $ar['dp_id']=$dp_id;","\t\t  \\DB::table('dp_likes')->insert($ar);","\t\t   $response['type']=\"success\";  ","\t   }","\t   else","\t   {","\t\t  $response['type']=\"error\"; ","\t\t   ","\t   }","\t    $response['total_likes'] =\\DB::table('dp_likes')->where(\"dp_id\",$dp_id)->count();","\t    return $response;","\t }","        ","   }","    ","    ","","    ","    ","    ","    ","    ","    public function licence()","    {","        return view('licence');","    }","    ","     public function message()","    {","        return view('message');","    }","     ","}",""],"id":344}],[{"start":{"row":0,"column":0},"end":{"row":203,"column":0},"action":"remove","lines":["<?php","","namespace App\\Http\\Controllers;","","use Illuminate\\Http\\Request;","","use App\\Http\\Requests;","use App\\Dp;","use App\\tag;","use App\\Category;","","","use Illuminate\\Support\\Facades\\Validator;","","","","","class DpController extends Controller","{","    ","    ","//       public function __construct()","//    {","//        $this->middleware('auth');","//    }","    ","    ","     public function index()","    {","        $dps = Dp::Paginate(4);","        $tags =tag::all();","        $categories = Category::all();","        $tag=0;","        ","        ","       // return $dps;","      //  return view('dps.index')->with('categories', 'dps','tag');","        ","        return view('dps.index',array('dps' => $dps,'tags' => $tags,'tag' => $tag,'categories' =>$categories));","     //compact('categories'),compact('dps'),compact('tag'));","    }","    ","     public function show(DP $dp)","    {","       ","        //$tags = $dp->tags();","        //return $tags;","\t\t","\t\tif(Auth::check())","\t\t{","\t\t   if(\\DB::table('dp_likes')->where(\"user_id\",\\Auth::user()->id)->where('dp_id',$dp->id)->count()>0)","\t       {\t","\t\t\t$userLiked=1;","\t\t   }","\t\t   else","\t\t   {","\t\t\t  $userLiked=0; ","\t\t   }","\t\t}","\t\telse","\t\t{","\t\t  $userLiked=0;\t","\t\t\t","\t\t}","\t","        return view('dps.show',compact('dp'))->with(\"isUserLiked\",$userLiked);","    }","","     public function tag(tag $tag)","    {","       ","       $dps = $tag->dps()->Paginate(4);","       $tags =tag::all();","       $categories = Category::all();","       //return $dps;","       return view('dps.index',array('dps' => $dps,'tags' => $tags,'tag' => $tag,'categories' =>$categories));","       //return view('dps.index',compact('dps'),compact('tag'));","        ","    }","    ","     public function category(category $category)","    {","       ","       $dps = $category->dps()->Paginate(4);","       $tags =tag::all();","       $categories = Category::all();","       //return $dps;","       return view('dps.index',array('dps' => $dps,'tags' => $tags,'category' => $category,'categories' =>$categories));","       ","       //return view('dps.index',compact('dps'),compact('tag'));","        ","    }","    ","    public function search(Request $request)","    {","       \t// Gets the query string from our form submission ","        $search = \\Request::get('search');","       \t","       \t$dps = Dp::where('name', 'LIKE', '%' . $search . '%')->paginate(4);","        $tags =tag::all();","        $categories = Category::all();","        $tag = 0;  ","        ","        return view('dps.index',array('dps' => $dps,'tags' => $tags,'tag' => $tag,'categories' =>$categories));","        ","        ","","     }","     ","     public function sendForm()","    {","       ","        //Get all the data and store it inside Store Variable","        $data = \\Request::all();","        ","        $user  = \\Auth::user();","        ","      //  return $data;","","        //Validation rules","        //{\"_token\":\"dMKekQkq5Wqn4efEiXlNuEaYqpUIkU63HGwMed2c\",\"name\":\"TestName\",\"description\":\"Testdescription\",\"baseComponent\":\"testbase\",\"pdf\":\"testbaselink\",\"val\":\"open\",\"opensourceproject\":\"opensourcelink\",\"tags\":\"teattag1,teattag2\",\"eaglefile\":\"Breadboard_power r3.sch\"}","        $rules = array (","            'name' => 'required',// uncomment if you want to grab this field","        //    'description' => 'required|min:10',","            //'email' => 'required|email',  uncomment if you want to grab this field","         //   'eaglefile' => 'required'","        );","","        //Validate data","        $validator = Validator::make ($data, $rules);","","        //If everything is correct than run passes.","        if ($validator -> passes()){","            ","           ","","           \\Mail::send('emails.newDp',  array('user' => $user,'data' => $data), function($message) use ($data)","            {","                //$message->from($data['email'] , $data['first_name']); uncomment if using first name and email fields ","                $message->from('newDP@makerstorage', 'New Design Pattern Arrived');","                //email 'To' field: cahnge this to emails that you want to be notified.                    ","                $message->to('nerginer@gmail.com', 'Nuri')->cc('nerginer@gnexlab.com')->subject('New Design Pattern');","","            });","                // Redirect to page","                 return view('message')->with('message', 'Your message has been sent. Thank You!');","","","               ","        }else{","                //return contact form with errors","                $errors = $validator->errors()->all();","","                return view('message',compact('errors'));","                ","                ","","        }","     }","    ","    ","        ","   public function incLikes($dp_id)","   {","\t if(\\Auth::check())","\t {   ","       if(\\DB::table('dp_likes')->where(\"user_id\",\\Auth::user()->id)->where('dp_id',$dp_id)->count()==0)","\t   {","\t\t  $ar=[];","\t\t  $ar['user_id']=\\Auth::user()->id;","\t\t  $ar['dp_id']=$dp_id;","\t\t  \\DB::table('dp_likes')->insert($ar);","\t\t   $response['type']=\"success\";  ","\t   }","\t   else","\t   {","\t\t  $response['type']=\"error\"; ","\t\t   ","\t   }","\t    $response['total_likes'] =\\DB::table('dp_likes')->where(\"dp_id\",$dp_id)->count();","\t    return $response;","\t }","        ","   }","    ","    ","","    ","    ","    ","    ","    ","    public function licence()","    {","        return view('licence');","    }","    ","     public function message()","    {","        return view('message');","    }","     ","}",""],"id":345}],[{"start":{"row":0,"column":0},"end":{"row":203,"column":0},"action":"insert","lines":["<?php","","namespace App\\Http\\Controllers;","","use Illuminate\\Http\\Request;","","use App\\Http\\Requests;","use App\\Dp;","use App\\tag;","use App\\Category;","","","use Illuminate\\Support\\Facades\\Validator;","","","","","class DpController extends Controller","{","    ","    ","//       public function __construct()","//    {","//        $this->middleware('auth');","//    }","    ","    ","     public function index()","    {","        $dps = Dp::Paginate(4);","        $tags =tag::all();","        $categories = Category::all();","        $tag=0;","        ","        ","       // return $dps;","      //  return view('dps.index')->with('categories', 'dps','tag');","        ","        return view('dps.index',array('dps' => $dps,'tags' => $tags,'tag' => $tag,'categories' =>$categories));","     //compact('categories'),compact('dps'),compact('tag'));","    }","    ","     public function show(DP $dp)","    {","       ","        //$tags = $dp->tags();","        //return $tags;","\t\t","\t\tif(\\Auth::check())","\t\t{","\t\t   if(\\DB::table('dp_likes')->where(\"user_id\",\\Auth::user()->id)->where('dp_id',$dp->id)->count()>0)","\t       {\t","\t\t\t$userLiked=1;","\t\t   }","\t\t   else","\t\t   {","\t\t\t  $userLiked=0; ","\t\t   }","\t\t}","\t\telse","\t\t{","\t\t  $userLiked=0;\t","\t\t\t","\t\t}","\t","        return view('dps.show',compact('dp'))->with(\"isUserLiked\",$userLiked);","    }","","     public function tag(tag $tag)","    {","       ","       $dps = $tag->dps()->Paginate(4);","       $tags =tag::all();","       $categories = Category::all();","       //return $dps;","       return view('dps.index',array('dps' => $dps,'tags' => $tags,'tag' => $tag,'categories' =>$categories));","       //return view('dps.index',compact('dps'),compact('tag'));","        ","    }","    ","     public function category(category $category)","    {","       ","       $dps = $category->dps()->Paginate(4);","       $tags =tag::all();","       $categories = Category::all();","       //return $dps;","       return view('dps.index',array('dps' => $dps,'tags' => $tags,'category' => $category,'categories' =>$categories));","       ","       //return view('dps.index',compact('dps'),compact('tag'));","        ","    }","    ","    public function search(Request $request)","    {","       \t// Gets the query string from our form submission ","        $search = \\Request::get('search');","       \t","       \t$dps = Dp::where('name', 'LIKE', '%' . $search . '%')->paginate(4);","        $tags =tag::all();","        $categories = Category::all();","        $tag = 0;  ","        ","        return view('dps.index',array('dps' => $dps,'tags' => $tags,'tag' => $tag,'categories' =>$categories));","        ","        ","","     }","     ","     public function sendForm()","    {","       ","        //Get all the data and store it inside Store Variable","        $data = \\Request::all();","        ","        $user  = \\Auth::user();","        ","      //  return $data;","","        //Validation rules","        //{\"_token\":\"dMKekQkq5Wqn4efEiXlNuEaYqpUIkU63HGwMed2c\",\"name\":\"TestName\",\"description\":\"Testdescription\",\"baseComponent\":\"testbase\",\"pdf\":\"testbaselink\",\"val\":\"open\",\"opensourceproject\":\"opensourcelink\",\"tags\":\"teattag1,teattag2\",\"eaglefile\":\"Breadboard_power r3.sch\"}","        $rules = array (","            'name' => 'required',// uncomment if you want to grab this field","        //    'description' => 'required|min:10',","            //'email' => 'required|email',  uncomment if you want to grab this field","         //   'eaglefile' => 'required'","        );","","        //Validate data","        $validator = Validator::make ($data, $rules);","","        //If everything is correct than run passes.","        if ($validator -> passes()){","            ","           ","","           \\Mail::send('emails.newDp',  array('user' => $user,'data' => $data), function($message) use ($data)","            {","                //$message->from($data['email'] , $data['first_name']); uncomment if using first name and email fields ","                $message->from('newDP@makerstorage', 'New Design Pattern Arrived');","                //email 'To' field: cahnge this to emails that you want to be notified.                    ","                $message->to('nerginer@gmail.com', 'Nuri')->cc('nerginer@gnexlab.com')->subject('New Design Pattern');","","            });","                // Redirect to page","                 return view('message')->with('message', 'Your message has been sent. Thank You!');","","","               ","        }else{","                //return contact form with errors","                $errors = $validator->errors()->all();","","                return view('message',compact('errors'));","                ","                ","","        }","     }","    ","    ","        ","   public function incLikes($dp_id)","   {","\t if(\\Auth::check())","\t {   ","       if(\\DB::table('dp_likes')->where(\"user_id\",\\Auth::user()->id)->where('dp_id',$dp_id)->count()==0)","\t   {","\t\t  $ar=[];","\t\t  $ar['user_id']=\\Auth::user()->id;","\t\t  $ar['dp_id']=$dp_id;","\t\t  \\DB::table('dp_likes')->insert($ar);","\t\t   $response['type']=\"success\";  ","\t   }","\t   else","\t   {","\t\t  $response['type']=\"error\"; ","\t\t   ","\t   }","\t    $response['total_likes'] =\\DB::table('dp_likes')->where(\"dp_id\",$dp_id)->count();","\t    return $response;","\t }","        ","   }","    ","    ","","    ","    ","    ","    ","    ","    public function licence()","    {","        return view('licence');","    }","    ","     public function message()","    {","        return view('message');","    }","     ","}",""],"id":346}],[{"start":{"row":0,"column":0},"end":{"row":203,"column":0},"action":"remove","lines":["<?php","","namespace App\\Http\\Controllers;","","use Illuminate\\Http\\Request;","","use App\\Http\\Requests;","use App\\Dp;","use App\\tag;","use App\\Category;","","","use Illuminate\\Support\\Facades\\Validator;","","","","","class DpController extends Controller","{","    ","    ","//       public function __construct()","//    {","//        $this->middleware('auth');","//    }","    ","    ","     public function index()","    {","        $dps = Dp::Paginate(4);","        $tags =tag::all();","        $categories = Category::all();","        $tag=0;","        ","        ","       // return $dps;","      //  return view('dps.index')->with('categories', 'dps','tag');","        ","        return view('dps.index',array('dps' => $dps,'tags' => $tags,'tag' => $tag,'categories' =>$categories));","     //compact('categories'),compact('dps'),compact('tag'));","    }","    ","     public function show(DP $dp)","    {","       ","        //$tags = $dp->tags();","        //return $tags;","\t\t","\t\tif(\\Auth::check())","\t\t{","\t\t   if(\\DB::table('dp_likes')->where(\"user_id\",\\Auth::user()->id)->where('dp_id',$dp->id)->count()>0)","\t       {\t","\t\t\t$userLiked=1;","\t\t   }","\t\t   else","\t\t   {","\t\t\t  $userLiked=0; ","\t\t   }","\t\t}","\t\telse","\t\t{","\t\t  $userLiked=0;\t","\t\t\t","\t\t}","\t","        return view('dps.show',compact('dp'))->with(\"isUserLiked\",$userLiked);","    }","","     public function tag(tag $tag)","    {","       ","       $dps = $tag->dps()->Paginate(4);","       $tags =tag::all();","       $categories = Category::all();","       //return $dps;","       return view('dps.index',array('dps' => $dps,'tags' => $tags,'tag' => $tag,'categories' =>$categories));","       //return view('dps.index',compact('dps'),compact('tag'));","        ","    }","    ","     public function category(category $category)","    {","       ","       $dps = $category->dps()->Paginate(4);","       $tags =tag::all();","       $categories = Category::all();","       //return $dps;","       return view('dps.index',array('dps' => $dps,'tags' => $tags,'category' => $category,'categories' =>$categories));","       ","       //return view('dps.index',compact('dps'),compact('tag'));","        ","    }","    ","    public function search(Request $request)","    {","       \t// Gets the query string from our form submission ","        $search = \\Request::get('search');","       \t","       \t$dps = Dp::where('name', 'LIKE', '%' . $search . '%')->paginate(4);","        $tags =tag::all();","        $categories = Category::all();","        $tag = 0;  ","        ","        return view('dps.index',array('dps' => $dps,'tags' => $tags,'tag' => $tag,'categories' =>$categories));","        ","        ","","     }","     ","     public function sendForm()","    {","       ","        //Get all the data and store it inside Store Variable","        $data = \\Request::all();","        ","        $user  = \\Auth::user();","        ","      //  return $data;","","        //Validation rules","        //{\"_token\":\"dMKekQkq5Wqn4efEiXlNuEaYqpUIkU63HGwMed2c\",\"name\":\"TestName\",\"description\":\"Testdescription\",\"baseComponent\":\"testbase\",\"pdf\":\"testbaselink\",\"val\":\"open\",\"opensourceproject\":\"opensourcelink\",\"tags\":\"teattag1,teattag2\",\"eaglefile\":\"Breadboard_power r3.sch\"}","        $rules = array (","            'name' => 'required',// uncomment if you want to grab this field","        //    'description' => 'required|min:10',","            //'email' => 'required|email',  uncomment if you want to grab this field","         //   'eaglefile' => 'required'","        );","","        //Validate data","        $validator = Validator::make ($data, $rules);","","        //If everything is correct than run passes.","        if ($validator -> passes()){","            ","           ","","           \\Mail::send('emails.newDp',  array('user' => $user,'data' => $data), function($message) use ($data)","            {","                //$message->from($data['email'] , $data['first_name']); uncomment if using first name and email fields ","                $message->from('newDP@makerstorage', 'New Design Pattern Arrived');","                //email 'To' field: cahnge this to emails that you want to be notified.                    ","                $message->to('nerginer@gmail.com', 'Nuri')->cc('nerginer@gnexlab.com')->subject('New Design Pattern');","","            });","                // Redirect to page","                 return view('message')->with('message', 'Your message has been sent. Thank You!');","","","               ","        }else{","                //return contact form with errors","                $errors = $validator->errors()->all();","","                return view('message',compact('errors'));","                ","                ","","        }","     }","    ","    ","        ","   public function incLikes($dp_id)","   {","\t if(\\Auth::check())","\t {   ","       if(\\DB::table('dp_likes')->where(\"user_id\",\\Auth::user()->id)->where('dp_id',$dp_id)->count()==0)","\t   {","\t\t  $ar=[];","\t\t  $ar['user_id']=\\Auth::user()->id;","\t\t  $ar['dp_id']=$dp_id;","\t\t  \\DB::table('dp_likes')->insert($ar);","\t\t   $response['type']=\"success\";  ","\t   }","\t   else","\t   {","\t\t  $response['type']=\"error\"; ","\t\t   ","\t   }","\t    $response['total_likes'] =\\DB::table('dp_likes')->where(\"dp_id\",$dp_id)->count();","\t    return $response;","\t }","        ","   }","    ","    ","","    ","    ","    ","    ","    ","    public function licence()","    {","        return view('licence');","    }","    ","     public function message()","    {","        return view('message');","    }","     ","}",""],"id":347}],[{"start":{"row":0,"column":0},"end":{"row":197,"column":0},"action":"insert","lines":["<?php","","namespace App\\Http\\Controllers;","","use Illuminate\\Http\\Request;","","use App\\Http\\Requests;","use App\\Dp;","use App\\tag;","use App\\Category;","","","use Illuminate\\Support\\Facades\\Validator;","","","","","class DpController extends Controller","{","    ","    ","//       public function __construct()","//    {","//        $this->middleware('auth');","//    }","    ","    ","     public function index()","    {","        $dps = Dp::Paginate(4);","        $tags =tag::all();","        $categories = Category::all();","        $tag=0;","        ","        ","       // return $dps;","      //  return view('dps.index')->with('categories', 'dps','tag');","        ","        return view('dps.index',array('dps' => $dps,'tags' => $tags,'tag' => $tag,'categories' =>$categories));","     //compact('categories'),compact('dps'),compact('tag'));","    }","    ","     public function show(DP $dp)","    {","       ","        //$tags = $dp->tags();","        //return $tags;","\t\t","\t\tif(\\Auth::check())","\t\t{","\t\t   if(\\DB::table('dp_likes')->where(\"user_id\",\\Auth::user()->id)->where('dp_id',$dp->id)->count()>0)","\t       {\t","\t\t\t$userLiked=1;","\t\t   }","\t\t   else","\t\t   {","\t\t\t  $userLiked=0; ","\t\t   }","\t\t}","\t\telse","\t\t{","\t\t  $userLiked=0;\t","\t\t\t","\t\t}","\t    $totalLikes=\\DB::table('dp_likes')->where('dp_id',$dp->id)->count();","        return view('dps.show',compact('dp'))->with(\"isUserLiked\",$userLiked)->with(\"totalLikes\",$totalLikes);","    }","","     public function tag(tag $tag)","    {","       ","       $dps = $tag->dps()->Paginate(4);","       $tags =tag::all();","       $categories = Category::all();","       //return $dps;","       return view('dps.index',array('dps' => $dps,'tags' => $tags,'tag' => $tag,'categories' =>$categories));","       //return view('dps.index',compact('dps'),compact('tag'));","        ","    }","    ","     public function category(category $category)","    {","       ","       $dps = $category->dps()->Paginate(4);","       $tags =tag::all();","       $categories = Category::all();","       //return $dps;","       return view('dps.index',array('dps' => $dps,'tags' => $tags,'category' => $category,'categories' =>$categories));","       ","       //return view('dps.index',compact('dps'),compact('tag'));","        ","    }","    ","    public function search(Request $request)","    {","       \t// Gets the query string from our form submission ","        $search = \\Request::get('search');","       \t","       \t$dps = Dp::where('name', 'LIKE', '%' . $search . '%')->paginate(4);","        $tags =tag::all();","        $categories = Category::all();","        $tag = 0;  ","        ","        return view('dps.index',array('dps' => $dps,'tags' => $tags,'tag' => $tag,'categories' =>$categories));","        ","        ","","     }","     ","     public function sendForm()","    {","       ","        //Get all the data and store it inside Store Variable","        $data = \\Request::all();","        ","        $user  = \\Auth::user();","        ","      //  return $data;","","        //Validation rules","        //{\"_token\":\"dMKekQkq5Wqn4efEiXlNuEaYqpUIkU63HGwMed2c\",\"name\":\"TestName\",\"description\":\"Testdescription\",\"baseComponent\":\"testbase\",\"pdf\":\"testbaselink\",\"val\":\"open\",\"opensourceproject\":\"opensourcelink\",\"tags\":\"teattag1,teattag2\",\"eaglefile\":\"Breadboard_power r3.sch\"}","        $rules = array (","            'name' => 'required',// uncomment if you want to grab this field","        //    'description' => 'required|min:10',","            //'email' => 'required|email',  uncomment if you want to grab this field","         //   'eaglefile' => 'required'","        );","","        //Validate data","        $validator = Validator::make ($data, $rules);","","        //If everything is correct than run passes.","        if ($validator -> passes()){","            ","           ","","           \\Mail::send('emails.newDp',  array('user' => $user,'data' => $data), function($message) use ($data)","            {","                //$message->from($data['email'] , $data['first_name']); uncomment if using first name and email fields ","                $message->from('newDP@makerstorage', 'New Design Pattern Arrived');","                //email 'To' field: cahnge this to emails that you want to be notified.                    ","                $message->to('nerginer@gmail.com', 'Nuri')->cc('nerginer@gnexlab.com')->subject('New Design Pattern');","","            });","                // Redirect to page","                 return view('message')->with('message', 'Your message has been sent. Thank You!');","","","               ","        }else{","                //return contact form with errors","                $errors = $validator->errors()->all();","","                return view('message',compact('errors'));","                ","                ","","        }","     }","    ","    ","        ","   public function incLikes($dp_id)","   {","\t if(\\Auth::check())","\t {   ","       if(\\DB::table('dp_likes')->where(\"user_id\",\\Auth::user()->id)->where('dp_id',$dp_id)->count()==0)","\t   {","\t\t  $ar=[];","\t\t  $ar['user_id']=\\Auth::user()->id;","\t\t  $ar['dp_id']=$dp_id;","\t\t  \\DB::table('dp_likes')->insert($ar);","\t\t   $response['type']=\"success\";  ","\t   }","\t   else","\t   {","\t\t  $response['type']=\"error\"; ","\t\t   ","\t   }","\t    $response['total_likes'] =\\DB::table('dp_likes')->where(\"dp_id\",$dp_id)->count();","\t    return $response;","\t }","        ","   }","        ","    ","    public function licence()","    {","        return view('licence');","    }","    ","     public function message()","    {","        return view('message');","    }","     ","}",""],"id":348}],[{"start":{"row":0,"column":0},"end":{"row":197,"column":0},"action":"remove","lines":["<?php","","namespace App\\Http\\Controllers;","","use Illuminate\\Http\\Request;","","use App\\Http\\Requests;","use App\\Dp;","use App\\tag;","use App\\Category;","","","use Illuminate\\Support\\Facades\\Validator;","","","","","class DpController extends Controller","{","    ","    ","//       public function __construct()","//    {","//        $this->middleware('auth');","//    }","    ","    ","     public function index()","    {","        $dps = Dp::Paginate(4);","        $tags =tag::all();","        $categories = Category::all();","        $tag=0;","        ","        ","       // return $dps;","      //  return view('dps.index')->with('categories', 'dps','tag');","        ","        return view('dps.index',array('dps' => $dps,'tags' => $tags,'tag' => $tag,'categories' =>$categories));","     //compact('categories'),compact('dps'),compact('tag'));","    }","    ","     public function show(DP $dp)","    {","       ","        //$tags = $dp->tags();","        //return $tags;","\t\t","\t\tif(\\Auth::check())","\t\t{","\t\t   if(\\DB::table('dp_likes')->where(\"user_id\",\\Auth::user()->id)->where('dp_id',$dp->id)->count()>0)","\t       {\t","\t\t\t$userLiked=1;","\t\t   }","\t\t   else","\t\t   {","\t\t\t  $userLiked=0; ","\t\t   }","\t\t}","\t\telse","\t\t{","\t\t  $userLiked=0;\t","\t\t\t","\t\t}","\t    $totalLikes=\\DB::table('dp_likes')->where('dp_id',$dp->id)->count();","        return view('dps.show',compact('dp'))->with(\"isUserLiked\",$userLiked)->with(\"totalLikes\",$totalLikes);","    }","","     public function tag(tag $tag)","    {","       ","       $dps = $tag->dps()->Paginate(4);","       $tags =tag::all();","       $categories = Category::all();","       //return $dps;","       return view('dps.index',array('dps' => $dps,'tags' => $tags,'tag' => $tag,'categories' =>$categories));","       //return view('dps.index',compact('dps'),compact('tag'));","        ","    }","    ","     public function category(category $category)","    {","       ","       $dps = $category->dps()->Paginate(4);","       $tags =tag::all();","       $categories = Category::all();","       //return $dps;","       return view('dps.index',array('dps' => $dps,'tags' => $tags,'category' => $category,'categories' =>$categories));","       ","       //return view('dps.index',compact('dps'),compact('tag'));","        ","    }","    ","    public function search(Request $request)","    {","       \t// Gets the query string from our form submission ","        $search = \\Request::get('search');","       \t","       \t$dps = Dp::where('name', 'LIKE', '%' . $search . '%')->paginate(4);","        $tags =tag::all();","        $categories = Category::all();","        $tag = 0;  ","        ","        return view('dps.index',array('dps' => $dps,'tags' => $tags,'tag' => $tag,'categories' =>$categories));","        ","        ","","     }","     ","     public function sendForm()","    {","       ","        //Get all the data and store it inside Store Variable","        $data = \\Request::all();","        ","        $user  = \\Auth::user();","        ","      //  return $data;","","        //Validation rules","        //{\"_token\":\"dMKekQkq5Wqn4efEiXlNuEaYqpUIkU63HGwMed2c\",\"name\":\"TestName\",\"description\":\"Testdescription\",\"baseComponent\":\"testbase\",\"pdf\":\"testbaselink\",\"val\":\"open\",\"opensourceproject\":\"opensourcelink\",\"tags\":\"teattag1,teattag2\",\"eaglefile\":\"Breadboard_power r3.sch\"}","        $rules = array (","            'name' => 'required',// uncomment if you want to grab this field","        //    'description' => 'required|min:10',","            //'email' => 'required|email',  uncomment if you want to grab this field","         //   'eaglefile' => 'required'","        );","","        //Validate data","        $validator = Validator::make ($data, $rules);","","        //If everything is correct than run passes.","        if ($validator -> passes()){","            ","           ","","           \\Mail::send('emails.newDp',  array('user' => $user,'data' => $data), function($message) use ($data)","            {","                //$message->from($data['email'] , $data['first_name']); uncomment if using first name and email fields ","                $message->from('newDP@makerstorage', 'New Design Pattern Arrived');","                //email 'To' field: cahnge this to emails that you want to be notified.                    ","                $message->to('nerginer@gmail.com', 'Nuri')->cc('nerginer@gnexlab.com')->subject('New Design Pattern');","","            });","                // Redirect to page","                 return view('message')->with('message', 'Your message has been sent. Thank You!');","","","               ","        }else{","                //return contact form with errors","                $errors = $validator->errors()->all();","","                return view('message',compact('errors'));","                ","                ","","        }","     }","    ","    ","        ","   public function incLikes($dp_id)","   {","\t if(\\Auth::check())","\t {   ","       if(\\DB::table('dp_likes')->where(\"user_id\",\\Auth::user()->id)->where('dp_id',$dp_id)->count()==0)","\t   {","\t\t  $ar=[];","\t\t  $ar['user_id']=\\Auth::user()->id;","\t\t  $ar['dp_id']=$dp_id;","\t\t  \\DB::table('dp_likes')->insert($ar);","\t\t   $response['type']=\"success\";  ","\t   }","\t   else","\t   {","\t\t  $response['type']=\"error\"; ","\t\t   ","\t   }","\t    $response['total_likes'] =\\DB::table('dp_likes')->where(\"dp_id\",$dp_id)->count();","\t    return $response;","\t }","        ","   }","        ","    ","    public function licence()","    {","        return view('licence');","    }","    ","     public function message()","    {","        return view('message');","    }","     ","}",""],"id":349,"ignore":true},{"start":{"row":0,"column":0},"end":{"row":206,"column":0},"action":"insert","lines":["<?php","","namespace App\\Http\\Controllers;","","use Illuminate\\Http\\Request;","","use App\\Http\\Requests;","use App\\Dp;","use App\\tag;","use App\\Category;","","","use Illuminate\\Support\\Facades\\Validator;","","","","","class DpController extends Controller","{","    ","    ","//       public function __construct()","//    {","//        $this->middleware('auth');","//    }","    ","    ","     public function index()","    {","        $dps = Dp::Paginate(4);","        $tags =tag::all();","        $categories = Category::all();","        $tag=0;","        ","        ","       // return $dps;","      //  return view('dps.index')->with('categories', 'dps','tag');","        ","        return view('dps.index',array('dps' => $dps,'tags' => $tags,'tag' => $tag,'categories' =>$categories));","     //compact('categories'),compact('dps'),compact('tag'));","    }","    ","     public function show(DP $dp)","    {","       ","        //$tags = $dp->tags();","        //return $tags;","\t\t","\t\tif(\\Auth::check())","\t\t{","\t\t   if(\\DB::table('dp_likes')->where(\"user_id\",\\Auth::user()->id)->where('dp_id',$dp->id)->count()>0)","\t       {\t","\t\t\t$userLiked=1;","\t\t   }","\t\t   else","\t\t   {","\t\t\t  $userLiked=0; ","\t\t   }","\t\t}","\t\telse","\t\t{","\t\t  $userLiked=0;\t","\t\t\t","\t\t}","\t    $totalLikes=\\DB::table('dp_likes')->where('dp_id',$dp->id)->count();","        return view('dps.show',compact('dp'))->with(\"isUserLiked\",$userLiked)->with(\"totalLikes\",$totalLikes);","    }","","     public function tag(tag $tag)","    {","       ","       $dps = $tag->dps()->Paginate(4);","       $tags =tag::all();","       $categories = Category::all();","       //return $dps;","       return view('dps.index',array('dps' => $dps,'tags' => $tags,'tag' => $tag,'categories' =>$categories));","       //return view('dps.index',compact('dps'),compact('tag'));","        ","    }","    ","     public function category(category $category)","    {","       ","       $dps = $category->dps()->Paginate(4);","       $tags =tag::all();","       $categories = Category::all();","       //return $dps;","       return view('dps.index',array('dps' => $dps,'tags' => $tags,'category' => $category,'categories' =>$categories));","       ","       //return view('dps.index',compact('dps'),compact('tag'));","        ","    }","    ","    public function search(Request $request)","    {","       \t// Gets the query string from our form submission ","        $search = \\Request::get('search');","       \t","       \t$dps = Dp::where('name', 'LIKE', '%' . $search . '%')->paginate(4);","        $tags =tag::all();","        $categories = Category::all();","        $tag = 0;  ","        ","        return view('dps.index',array('dps' => $dps,'tags' => $tags,'tag' => $tag,'categories' =>$categories));","        ","        ","","     }","     ","     public function sendForm()","    {","       ","        //Get all the data and store it inside Store Variable","        $data = \\Request::all();","        ","        $user  = \\Auth::user();","        ","      //  return $data;","","        //Validation rules","        //{\"_token\":\"dMKekQkq5Wqn4efEiXlNuEaYqpUIkU63HGwMed2c\",\"name\":\"TestName\",\"description\":\"Testdescription\",\"baseComponent\":\"testbase\",\"pdf\":\"testbaselink\",\"val\":\"open\",\"opensourceproject\":\"opensourcelink\",\"tags\":\"teattag1,teattag2\",\"eaglefile\":\"Breadboard_power r3.sch\"}","        $rules = array (","            'name' => 'required',// uncomment if you want to grab this field","        //    'description' => 'required|min:10',","            //'email' => 'required|email',  uncomment if you want to grab this field","         //   'eaglefile' => 'required'","        );","","        //Validate data","        $validator = Validator::make ($data, $rules);","","        //If everything is correct than run passes.","        if ($validator -> passes()){","            ","           ","","           \\Mail::send('emails.newDp',  array('user' => $user,'data' => $data), function($message) use ($data)","            {","                //$message->from($data['email'] , $data['first_name']); uncomment if using first name and email fields ","                $message->from('newDP@makerstorage', 'New Design Pattern Arrived');","                //email 'To' field: cahnge this to emails that you want to be notified.                    ","                $message->to('nerginer@gmail.com', 'Nuri')->cc('nerginer@gnexlab.com')->subject('New Design Pattern');","","            });","                // Redirect to page","                 return view('message')->with('message', 'Your message has been sent. Thank You!');","","","               ","        }else{","                //return contact form with errors","                $errors = $validator->errors()->all();","","                return view('message',compact('errors'));","                ","                ","","        }","     }","    ","    ","        ","   public function incLikes($dp_id)","   {","\t if(\\Auth::check())","\t { ","\t\t  if($_GET['type']=='like')","\t\t  {   ","\t\t\t   if(\\DB::table('dp_likes')->where(\"user_id\",\\Auth::user()->id)->where('dp_id',$dp_id)->count()==0)","\t\t\t   {","\t\t\t\t  $ar=[];","\t\t\t\t  $ar['user_id']=\\Auth::user()->id;","\t\t\t\t  $ar['dp_id']=$dp_id;","\t\t\t\t  \\DB::table('dp_likes')->insert($ar);","\t\t\t\t   $response['type']=\"success\";  ","\t\t\t   }","\t\t\t   else","\t\t\t   {","\t\t\t\t  $response['type']=\"error\"; ","\t\t\t\t   ","\t\t\t   }","\t\t  }","\t\t  else","\t\t  {","\t\t\t  ","\t\t\t  \\DB::table('dp_likes')->where(\"user_id\",\\Auth::user()->id)->where('dp_id',$dp_id)->delete();","\t\t\t  ","\t\t  }","\t    $response['total_likes'] =\\DB::table('dp_likes')->where(\"dp_id\",$dp_id)->count();","\t    return $response;","\t }","        ","   }","        ","    ","    public function licence()","    {","        return view('licence');","    }","    ","     public function message()","    {","        return view('message');","    }","     ","}",""]}]]},"ace":{"folds":[],"scrolltop":2460,"scrollleft":0,"selection":{"start":{"row":206,"column":0},"end":{"row":206,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":16,"state":"php-start","mode":"ace/mode/php"}},"timestamp":1461325279000,"hash":"dbae549cb4cf3bf65ebd2d3ac7c6dcb6daca390c"}